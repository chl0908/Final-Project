<<<<<<< HEAD
=======
<<<<<<< HEAD
my_name = "Chen"
my_age = 21
my_intro <- makeIntroduction(my_name, my_age)
casual_intro <- sub("Hello, my name is ","Hey, I'm\" in your 'my_intro'", makeIntroduction(my_name, my_age))
causal_intro
casual_intro
casual_intro <- sub("Hello, my name is ","Hey, I'm\" in your 'my_intro'", makeIntroduction(my_name, my_age))
casuak_intro
casual_intro
loud_intro<- toupper(my_intro)
loud_intro
# Create a new variable `quiet_intro`, which is your `my_intro` variable in all lower-case letters
quiet_intro<- tolower(my_intro)
quiet_intro
capitalized<- str_to_tittle(my_intro)
capitalized<- str_to_title(my_intro)
str_c("x""x")
install.packages("stringr")
library("stringr")
capitalized<- str_to_title(my_intro)
capitalized
occurences<- str_count(my_intro, pattern = "e")
occurences
Double<- function(x) {
answer<- x*x
return(answer)
Double<- function(x) {
answer<- x*x
return(answer)
}
a
1+@
Double<- function(x) {
answer<- x*x
return(answer)
}
double(2)
Double(23)
Double(2)
Double(5)
Double<- function(x) {
answer<- x*2
return(answer)
}
Double(23)
minutes_in_day<- Double(minutes_in_day)
minutes_in_two_day<- Double(minutes_in_day)
minutes_in_two_day
minutes_in_day
minutes_in_day = 60 * 24
minutes_in_day
minutes_in_two_day
minutes_in_two_day
minutes_in_day
> minutes_in_two_day<- Double(minutes_in_day)
> minutes_in_two_day = Double(minutes_in_day)
minutes_in_two_day<- Double(minutes_in_day)
minutes_in_two_day
ThirdPower<- function(y){
result<- y*y*y
return(result)
}
ThirdPower(5)
twenty_seven <- ThirdPower(3)
twenty_seven
movies <- c("Harry Potter","Jumanji", "The Post", "The Commuter", "Proud Mary","Paddington 2")
top_three <- movies[c(1,2,3)]
excited <- str_c(movies[c(1,2,3)], "is a great movie")
excited
excited <- str_c(movies[c(1,2,3,4,5,6)], "is a great movie")
without_four <- movies[c(1,2,3,5,6)]
numbers <- seq(700,999)
len <- length(numbers)
numbers_mean <- mean(numbers)
numbers_median <- median(numbers)
lower_numbers <- seq(500,699)
all_number <- paste(lower_numbers, numbers)
all_number
all_number <- c(lower_numbers, numbers)
all_number
length(numbers)
length)lower_numbers
length(lower_numbers)
length(all_number)
today<- as.Date(2018-01-22)
today<- as.Date("2018-01-22")
spring_break<- as.Date("Mar 10th, 2019")
days_to_break <- spring_break-today
spring_break<- as.Date("2019-03-10")
days_to_break <- spring_break-today
days_to_break
days_to_break <- spring_break - today
days_to_break
spring_break<- as.Date("2019-03-11")
days_to_break
days_to_break <- spring_break - today
spring_break<- as.Date("2019-03-11")
days_to_break
spring_break<- as.Date("2019-03-10")
days_to_break <- spring_break - today
MakeBirthdayIntro <- function(my_name, my_age, date){
countdown<- as.Date(date) - today
speak<- paste("Hello, my name is", my_name, "and I'm", my_age "years old. In" countdown "days I'll be {new_age}"
return(speak)
}
MakeBirthdayIntro <- function(my_name, my_age, date){
countdown<- as.Date(date) - today
new_age<- my_age + 1
speak<- paste("Hello, my name is", my_name, "and I'm", my_age, "years old. In", countdown, "days I'll be", new_age
return(speak)
}
MakeBirthdayIntro <- function(my_name, my_age, date){
birthday<- as.Date(date)
countdown<- birthday - today
new_age<- my_age + 1
speak<- paste("Hello, my name is", my_name, "and I'm", my_age, "years old. In", countdown, "days I'll be", new_age
return(speak)
}
MakeBirthdayIntro <- function(my_name, my_age, date){
birthday<- as.Date(date)
countdown<- birthday - today
new_age<- my_age + 1
speak<- paste(MakeBirthdayIntro(my_name, my_age), "In", countdown, "days I'll be", new_age)
return(speak)
}
MakeBirthdayIntro(Chen, 21, 2018-2-3)
MakeBirthdayIntro(Chen, 21, 2018-2-3)
MakeBirthdayIntro(Chen, 21, 2018-02-03)
source('~/Desktop/Archive 3/a2-core-skills-krystalflashback/aJia.R')
source('~/Desktop/Archive 3/a2-core-skills-krystalflashback/aJia.R')
source('~/Desktop/Archive 3/a2-core-skills-krystalflashback/aJia.R')
MakeBirthdayIntro <- function(name, age, date) {
birthday <- as.Date(date)
days.to.birthday <- birthday - today
new.age <- age + 1
sentence <- paste(MakeIntroduction(name, age), 'In', days.to.birthday, 'days I\'ll be', new.age)
return(sentence)
}
MakeBirthdayIntro(Chen,21,2018-3-2)
MakeBirthdayIntro(Chen,21,2018-03-12)
source('~/Desktop/INFO201/a2-r-intro-chl0908/assignment.R')
RemoveDigits <- function(vector) {
final_result <- gsub('[0-9]','',vector)
return(final.string)
}
RemoveDigits(123Hongkl)
RemoveDigits("123Hongkl")
RemoveDigits <- function(vector) {
final_result <- gsub('[0-9]','',vector)
return(final_result)
=======
tabPanel("Table", tableOutput("table"))
)
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
radioButtons("dist", "Distribution type:",
c("Normal" = "norm",
"Uniform" = "unif",
"Log-normal" = "lnorm",
"Exponential" = "exp")),
sidebarPanel('brand'),
sliderInput("slider2", "",
min = 0, max = 100, value = c(25, 75))
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
radioButtons("dist", "Distribution type:",
c("Normal" = "norm",
"Uniform" = "unif",
"Exponential" = "exp")),
sidebarPanel('brand'),
sliderInput("slider2", "",
min = 0, max = 100, value = c(25, 75))
),
mainPanel(
tabsetPanel(type = "tabs",
tabPanel("Plot", plotOutput("plot")),
tabPanel("Summary", verbatimTextOutput("summary")),
tabPanel("Table", tableOutput("table"))
)
)
)
)
shinyUI(my.ui)
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",
the_data$name = the_data[4:16]
),
mainPanel(
plotOutput("plots")
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",
the_data$name = the_data[4:16]
)
),
mainPanel(
plotOutput("plots")
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",
the_data$name = the_data[4:16]
)
),
mainPanel(
plotOutput("plots")
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",
the_data$name = the_data[4:16]
)
),
mainPanel(
plotOutput("plots")
)
)
)
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
the_data <- data.table::fread("/Users/a1111/desktop/info201HW/a8-shiny-SiwenW1998/data/cereal.tsv")
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",
the_data$name = the_data[4:16])
),
mainPanel(
plotOutput("plots")
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",
the_data$name = the_data[4:16])
),
mainPanel(
plotOutput("plots")
)
)
)
library(shiny)
the_data <- data.table::fread("/Users/a1111/desktop/info201HW/a8-shiny-SiwenW1998/data/cereal.tsv")
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",
the_data$name = the_data[4:16])
),
mainPanel(
plotOutput("plots")
)
)
)
shinyUI(my.ui)
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",
the_data$name = the_data[, 4])
),
mainPanel(
plotOutput("plots")
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
#selectInput("name of cereal", "name of cereal",
#the_data$name = the_data[4,16])
),
mainPanel(
plotOutput("plots")
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",
the_data$name = the_data[4,16])
),
mainPanel(
plotOutput("plots")
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",
the_data$name = the_data$name)
),
mainPanel(
plotOutput("plots")
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal")
),
mainPanel(
plotOutput("plots")
)
)
)
library(shiny)
the_data <- data.table::fread("data/cereal.tsv")
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",names(the_data$name))
),
mainPanel(
plotOutput("plots")
)
)
)
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",names(name == the_data$name))
),
mainPanel(
plotOutput("plots")
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",names(the_data$name))
),
mainPanel(
plotOutput("plots")
)
)
)
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
selectInput("name of cereal", "name of cereal",names(the_data))
),
mainPanel(
plotOutput("plots")
)
)
)
shinyUI(my.ui)
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
sliderInput("range", "Range:",
min = 1, max = 100,
value = c(200,500)),
mainPanel(
plotOutput("plots")
)
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
sliderInput("range", "Range:",
min = 0, max = 100,
value = c(200,500)),
mainPanel(
plotOutput("plots")
)
)
)
)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
sliderInput("range", "Range:",
min = 0, max = 100,
value = c(200,500))
),
mainPanel(
plotOutput("plots")
)
)
)
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
View(the_data)
my.server <- function(input, output) {
filtered <- reactive({
return(the_data[input$range[1] : input$range[2],])
})
output$table <- renderTable({
filter()
})
>>>>>>> 9154fe4e2d0998e94774172f3b48b9830c968fe0
}
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
my.server <- function(input, output) {
filtered <- reactive({
return(the_data[input$range[1] : input$range[2],])
})
output$table <- renderTable({
filtered()
})
}
shinyServer(my.server)
my.ui <- fluidPage(
titlePanel("the cereal"),
sidebarLayout(
sidebarPanel(
sliderInput("range", "Range:",
min = 0, max = 100,
value = c(60,100))
>>>>>>> fbfa3c3620d727d79dd3c30a0b63bf659a2a4fcb
),
mainPanel(
tableOutput("table")
)
)
)
shinyUI(my.ui)
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
output&plot <- renderPlot({
barplot(filtered,
main=graph,
ylab="calories",
xlab="rating")
})
output&plot <- renderPlot({
barplot(filtered,
main=graph,
ylab="calories",
xlab="rating")
})
output&plot <- renderPlot({
barplot(filtered(),
main=graph,
ylab="calories",
xlab="rating")
})
output&plot <- renderPlot({
plot(filtered(),
col = filtered$rating,
pch = 20, cex = 3)
})
output&plot <- renderPlot({
plot(filtered(),
col = filtered()$rating,
pch = 20, cex = 3)
points(filtered()$calories, pch = 4, cex = 4, lwd = 4)
})
output&plot <- renderPlot({
plot(filtered()$rating,filtered()$calories)
})
output$plot <- renderPlot({
plot(filtered()$rating,filtered()$calories)
})
output$table <- renderTable({
filtered()
})
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
output$table <- renderTable({
filtered()
})
output$table <- renderTable({
filtered()
})
output$table <- renderTable({
filtered()
})
#install.packages("shiny")
library(shiny)
library(dplyr)
library(ggplot2)
the_data <- data.table::fread("/Users/a1111/desktop/info201HW/a8-shiny-SiwenW1998/data/cereal.tsv")
View(the_data)
my.server <- function(input, output) {
filtered <- reactive({
return(filter(the_data, rating > input$range[1], rating < input$range[2]) %>%
filter(calories < input$range2))
})
output$table <- renderTable({
filtered()
})
#output$plot <- renderPlot({
#plot(filtered()$rating,filtered()$calories)
#})
}
my.server <- function(input, output) {
filtered <- reactive({
return(filter(the_data, rating > input$range[1], rating < input$range[2]) %>%
filter(calories < input$range2))
})
output$table <- renderTable({
filtered()
})
output$plot <- renderPlot({
plot(filtered()$rating,filtered()$calories)
})
}
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
output$plot <- renderPlot({
plot(filtered()$rating,filtered()$calories,colors("blue"))
})
#install.packages("shiny")
library(shiny)
library(dplyr)
library(ggplot2)
the_data <- data.table::fread("/Users/a1111/desktop/info201HW/a8-shiny-SiwenW1998/data/cereal.tsv")
View(the_data)
my.server <- function(input, output) {
filtered <- reactive({
return(filter(the_data, rating > input$range[1], rating < input$range[2]) %>%
filter(calories < input$range2))
})
output$table <- renderTable({
filtered()
})
output$plot <- renderPlot({
plot(filtered()$rating,filtered()$calories,colors("blue"))
})
}
<<<<<<< HEAD
for (i in 1)
for (i in 1:4) {}
data.frame(zip=98195, name"Huang", student=FALSE)
data.frame(zip=98195, name="Huang", student=FALSE)
employee<- data.frame(zip=98195, name="Huang", student=FALSE)
employee<- data.frame(zip=c(98188,98888), name=c("Huang","Javad"), student=c(FALSE,TRUE))
employee
[:digit:]
employee[[1]]
employee[c("zip", "student")]
employy$name
employee$name
height<- c(165, 170, 177, 199, 182)
weight<- c(66, 77, 90, 82, 92)
health<- data.frame(height, weight)
health
health<- data.frame(height, weight*2.2)
data.frame(height, weight*2.2)
data.frame(height, wght=weight*2.2)
health$height
helth$weight
health$weight
good<- 1,2,3
good<- c(1,2,3)
[[:digit:]]
digit
[:digit]
[:digit:]
[[:digit:]]
health$height[1]
health[1,1]
health[1:3,1]
health[1,1:2]
health[1,1:3]
health[-1,1:2]
health[,2]
health[1]
health[,1]
health[,1, drop=FASE;]
health[,1, drop=FALSE]
health[,1:2]
health[1:2]
health[1:3]
health[1:3,]
health[health$weight < 175, ]
health[health$height < 175, ]
health$height
health$height < 175
health$height<175
health[health$height<175,]
health[health$height<175,weight]
health[health$height<175,"weight]
health[health$height<175,"weight"]
health[health$height<175,"weight"]
View(health)
health$weight/(health$height/100)^2
health$bmi<- health$weight/(health$height/100)^2
health
overweight <- health$bmi >25
overweight
health$overweight <- health$bmi >25
health
sum(health$overweight)
johnny <- c(200,80,NA,NA)
rbind(health,johnny)
johnny <- date.frame(200,80,NA,NA)
johnny <- data.frame(200,80,NA,NA)
rbind(health,johnny)
johnny <- data.frame(height =200, weight=80, bmi=NA overweight=NA)
johnny <- data.frame(height =200, weight=80, bmi=NA,overweight=NA)
rbind(health,jognny)
rbind(health,johnny)
rbind(health,johnny)
source('~/Desktop/INFO201/ch09-dataframes/exercise-1/exercise.R')
resilt
result
source('~/Desktop/INFO201/ch09-dataframes/exercise-1/exercise.R')
result
opponents <- "Atlanta Falcons"
3!
dbinom(3,3,0.44)
install("nycflights13")
install.packages("nycflights13")
library(nycflights13)
print(flights, n=3)
tail(flights, 2)
question_one <- select(flights, month.abb)
question_one <- select(flights, month)
install.packages("dplyr")
library("dplyr")
question_one <- select(flights, month.abb)
question_one <- select(flights, month)
question_one
question_one <- select(flights, month, day, origin, destination, carrier, tailnum)
question_one <- select(flights, month, day, origin, dest, carrier, tailnum)
question_one
question_two <- filter(flights, dest==SEA)
question_two <- filter(flights, dest=="SEA")
question_two
question_two <- filter(question_one, dest=="SEA")
question_two
question_two
question_one <- select(flights, month, day, origin, dest, carrier, tailnum)
question_one <- select(flights, month, day, origin, dest, carrier, tailnum) %>%
filter(dest="SEA")
filter(dest=="SEA")
question_two
flight %>% filter(dest == "SEA") %>% select(dest)
flights %>% filter(dest == "SEA") %>% select(dest)
mutate(ISOdate(2013,month,day,sep="-"))
mutate(ISOdate(2013,month,day,sep= "-"))
mutate(flight(ISOdate(2013,month,day,sep= "-")))
mutate(flights(ISOdate(2013,month,day,sep= "-")))
mutate(ISOdate(2013,month,day,sep= "-"))
flights %>%
select(month,day,origin, dest, carrier, tailnum) %>%
arrange(dest, carrier)
nrow(flights)
flights %>% summarize(n=n())
flights %>% count()
flights %>% filter(dest="SEA")
flights %>% filter(dest=="SEA") %>% summarize(np=tailnum %>% unique() %>% length() )
flights %>%  group_by(origin) %>%  summarise(delay = mean(dep_delay))
flights %>%  group_by(origin) %>%  summarise(delay = mean(dep_delay))
View(flights)
flights %>%  group_by(origin) %>%  summarise(delay = mean(dep_delay), na.rm = TRUE)
flights %>%  group_by(origin) %>%  summarise(delay = mean(dep_delay, na.rm = TRUE))
flights %>%  group_by(origin) %>%  summarise(delay = mean(dep_delay, na.rm = TRUE))
flights %>%  group_by(origin) %>%  summarise(delay = mean(dep_delay, na.rm = TRUE))
%>% summarise(arrive = mean(arr_delay, na.rm = TRUE))
flights %>%  group_by(origin) %>%  summarise(delay = mean(dep_delay, na.rm = TRUE))
%>% summarise(arrive = mean(arr_delay, na.rm = TRUE))
flights %>%  group_by(origin) %>%  summarise(delay = mean(dep_delay, na.rm = TRUE)) %>% summarise(arrive = mean(arr_delay, na.rm = TRUE))
flights %>%  group_by(origin) %>%  summarise(delay = mean(dep_delay, na.rm = TRUE), adelay = mean(arr_delay, na.rm = TRUE)
)
flights %>% group_by(carrier)
flight %>% filter(dest == "SEA")
flights %>% filter(dest == "SEA") %>% group_by(origin) %>% count()
flights %>% filter(dest == "SEA") %>% group_by(origin) %>% ungroup () %>% count()
flights %>% filter(dest == "SEA") %>% group_by(origin)
flights %>% filter(dest == "SEA") %>% group_by(origin) %>% count()
flights %>%  filter(dest == "SEA") %>% summarise(delay = mean(dep_delay, na.rm = TRUE))
flights %>%  filter(dest == "SEA") %>% group_by(carrier) %>% summarise(delay = mean(dep_delay, na.rm = TRUE))
flights %>% filter(dest == "SEA")
flights %>% filter(dest == "SEA", arr_delay > 0) %>% group_by(carrier) %>%  summarize(d = mean(arr_delay, na.rm=TRUE))
flights %>% filter(dest == "SEA", arr_delay > 0) %>% group_by(carrier) %>%  summarize(d = mean(arr_delay, na.rm=TRUE)) %>% arrange(desc(d))
flights %>% filter(dest == "SEA", arr_delay > 0) %>% group_by(carrier) %>%  summarize(d = mean(arr_delay, na.rm=TRUE), s = mean(arr_time, na.rm = TRUE)) %>% arrange(desc(d))
flights %>% filter(dest == "SEA", arr_delay > 0) %>% group_by(carrier) %>%  summarize(d = mean(arr_delay, na.rm=TRUE), s = mean(arr_time, na.rm = TRUE)) %>% arrange(desc(d), DESC(S))
flights %>% filter(dest == "SEA", arr_delay > 0) %>% group_by(carrier) %>%  summarize(d = mean(arr_delay, na.rm=TRUE), s = mean(arr_time, na.rm = TRUE)) %>% arrange(desc(d), desc(s)
)
install.packages("ggmap")
library(ggmap)
pi
pi <- 4
pu
pi
base::pi
base pi
ggmap::qmap("Seattle")
library(httr)
install.packages("httr")
library(httr)
uri <- "http://api.github.com/users/info201b-wi2018/repos"
query <- list(per_page=3)
res <- GET(uri,query=query)
res
typeof(res)
res <- GET(uri,query=query)
res <- GET(uri,query=query)
ghBase <- "https://api.github.com/"
resource<- "search/repositories"
uri<- paste0(ghBase,resource)
qParams <- list(q="dplyr")
result <- GET(uri, query=qParams)
data<- result %>%
content("text") %>%
fromJSON()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
-1.28
1.28 * 1.2 / 0,5
1.28 * 1.2 / 0.5
(1.28 * 1.2 / 0.5)^2
√173
1.96*4.8
9.408^2
1.6^2
2.17*3.4/2
3.689^_^
3.689^2
2.575 * 8/2
10.3^2
2。030*（6.7/sqrt(36))
2。030*（6.7/sqrt(36))
14.257
49.588
-5 / 20
-0.25 / sqrt(20)
(80.9-85)/11.6/sqrt(25)
R
install.packages("tidyverse")
library(tidyverse)
R
shiny::runApp('Desktop/INFO201/a8-shiny-chl0908')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='chl0908', token='582C4A23652100CFE2B660DF15596CAE', secret='wIbxbGqFkKdmfIcPqT/O3XgabzXLI10mNyATrXaL')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
runApp('Desktop/INFO201/a8-shiny-chl0908')
ui <- fluidPage(
titlePanel("Criminal Percentage"),
sidebarLayout(
sidebarPanel(
selectInput("Type",
label = "What kind of crime are you looking for? ",
choices = c("???????????")
),
hr(),
selectInput("Age",
label = "Which age range are you looking for? ",
choices = c("Under 18" = "under",
"Above 18" = "over",
"Total arrests" = "All")
)
),
mainPanel(
plotOutput("pieChart")
)
)
)
setwd("~/desktop/info201/Final-Project")
ui <- fluidPage(
titlePanel("Criminal Percentage"),
sidebarLayout(
sidebarPanel(
selectInput("Type",
label = "What kind of crime are you looking for? ",
choices = c("???????????")
),
hr(),
selectInput("Age",
label = "Which age range are you looking for? ",
choices = c("Under 18" = "under",
"Above 18" = "over",
"Total arrests" = "All")
)
),
mainPanel(
plotOutput("pieChart")
)
)
)
install.packages("shiny")
ui <- fluidPage(
titlePanel("Criminal Percentage"),
sidebarLayout(
sidebarPanel(
selectInput("Type",
label = "What kind of crime are you looking for? ",
choices = c("???????????")
),
hr(),
selectInput("Age",
label = "Which age range are you looking for? ",
choices = c("Under 18" = "under",
"Above 18" = "over",
"Total arrests" = "All")
)
),
mainPanel(
plotOutput("pieChart")
)
)
)
ui <- fluidPage(
titlePanel("Criminal Percentage"),
sidebarLayout(
sidebarPanel(
selectInput("Type",
label = "What kind of crime are you looking for? ",
choices = c("???????????")
),
hr(),
selectInput("Age",
label = "Which age range are you looking for? ",
choices = c("Under 18" = "under",
"Above 18" = "over",
"Total arrests" = "All")
)
),
mainPanel(
plotOutput("pieChart")
)
)
)
library(shiny)
ui <- fluidPage(
titlePanel("Criminal Percentage"),
sidebarLayout(
sidebarPanel(
selectInput("Type",
label = "What kind of crime are you looking for? ",
choices = c("???????????")
),
hr(),
selectInput("Age",
label = "Which age range are you looking for? ",
choices = c("Under 18" = "under",
"Above 18" = "over",
"Total arrests" = "All")
)
),
mainPanel(
plotOutput("pieChart")
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
=======
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
data <- read.csv("data/data.csv")
data <- read.csv("/Users/a1111/desktop/info201HW/Final-Project/data/data.csv")
View(dataUsed)
View(inputDataOne)
View(inputDataOne())
source('~/Desktop/info201HW/Final-Project/filter_data.R')
# Use a fluid Bootstrap layout
my.ui <- fluidPage(
# Give the page a title
titlePanel("Data you wanna know about CEREAL!"),
sidebarLayout(
# Define a sidebar
sidebarPanel(
# Define the slider with the range of rating
sliderInput(),
helpText("The range of the rating is from 0 to 100,
and you can choose the range of rating you want to view.
The table below the scatter plot will give you a detailed information
about the cereal you are interested in."),
# Define the slider with the one-end points of calories
sliderInput()
),
mainPanel(
# display a scattor plot with the interested information
plotOutput("plot"),
# display an information table present the interested information
tableOutput("table")
)
)
)
shiny::runApp('Desktop/info201HW/Final-Project')
install.packages("plotrix")
shiny::runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
<<<<<<< HEAD
source('C:/Users/admin/Desktop/info201/Final-Project/filter_data.R')
shiny::runApp()
runApp()
runApp()
install.packages("plotrix")
runApp()
runApp()
runApp()
install.packages("plotly")
library("plotly", lib.loc="~/R/win-library/3.4")
runApp()
runApp('app')
install.packages("googleCharts")
runApp('app')
devtools::install_github("jcheng5/googleCharts")
install.packages("devtools")
devtools::install_github("jcheng5/googleCharts")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help(plot_ly)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("ggplot2", lib.loc="~/R/win-library/3.4")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help("geom_bar")
runApp()
help(hplot)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a = data.frame(o = c(1:4))
View(a)
View(a)
a$b <- c(2:5)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
c(1:0.1:4.1)
c(0:3.1,0.1)
c(0:3.1:0.1)
seq(1,3.1,0.1)
runApp()
runApp()
runApp()
runApp()
runApp()
rnorm(30)
help(rnorm)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dataTwo <- read.csv("data/dataTwo.csv")
View(dataTwo)
View(dataTwo)
dataUsed <- dataTwo[,grepl("White", names(dataTwo))]
dataUsed$Offense_charged <- dataTwo$Offense_charged
dataUsed$x <- runif(31, min=0, max=4)
dataUsed$y <-seq(0,3,0.1)
dataUsed$amount <- seq(0,30)
View(dataUsed)
View(dataUsed)
dataUsed <- dataTwo[,grepl("White", names(dataTwo))]
runApp()
runApp()
runApp()
dataUsed <- data.frame(a = dataTwo[,grepl("White", names(dataTwo))])
dataUsed$Offense_charged <- dataTwo$Offense_charged
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed$amount <- seq(0,29)
View(dataUsed)
View(dataUsed)
dataUsed$Offense_charged <- dataTwo$Offense_charged
View(dataUsed)
View(dataUsed)
dataUsed <- data.frame(a = dataTwo[,grepl("White"$"Total", names(dataTwo))])
dataUsed$Offense_charged <- dataTwo$Offense_charged
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed$amount <- seq(0,29)
dataUsed <- data.frame(a = dataTwo[,grepl("White","Total", names(dataTwo))])
dataUsed$Offense_charged <- dataTwo$Offense_charged
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed$amount <- seq(0,29)
tail(dataUsed,30)
amount <- dataTwo[,grepl("White", names(dataTwo))]
dataUsed$Offense_charged <- data.frame(amount = amount, Offense_charged = dataTwo$Offense_charged)
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed$amount <- seq(0,29)
amount <- dataTwo[,grepl("White", names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense_charged)
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed$amount <- seq(0,29)
dataTwo$Offense_charged
dataTwo$Offense.charged
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help(arange)
help(arrange)
runApp()
amount <- dataTwo[,grepl(input$Race, names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense.charged)
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed <- dataUsed %>% arrange(desc(amount))
dataUsed$size <- seq(0,87,3)
runApp()
amount <- dataTwo[,grepl("White", names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense.charged)
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed <- dataUsed %>% arrange(desc(amount))
dataUsed$size <- seq(0,87,3)
View(dataUsed)
runApp()
runApp()
dataUsed <- data %>% filter(Offense_charged == input$Type)
dataUsed <- dataUsed[,grepl(input$Age, names(data))]
runApp()
dataUsed <- data %>% filter(Offense_charged == "Rape")
dataUsed <- dataUsed[,grepl("Total", names(data))]
data <- read.csv("data/data.csv")
View(data)
View(data)
dataUsed <- data %>% filter(Offense_charged == "Rape")
dataUsed <- dataUsed[,grepl("Total", names(data))]
View(dataUsed)
View(dataUsed)
View(data)
View(data)
runApp()
dataUsed <- data %>% filter(Offense_charged == "Rape")
dataUsed <- dataUsed[,grepl("total", names(data))]
View(dataUsed)
View(dataUsed)
runApp()
seq(1,1+3*5,3)
dataUsed <- dataUsed %>% arrange(desc(amount)
/
.
asdgfdhxnfhcm
dataUsed <- dataUsed %>% arrange(desc(amount)
vbnml;''
dataUsed <- dataUsed %>% arrange(desc(amount))
size(dataUsed)
length(dataUsed)
View(dataUsed)
View(dataUsed)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help(xaxis)
runApp()
View(race)
View(race)
help("as.vector")
runApp()
runApp()
runApp()
View(race)
View(race)
a <- as.vector(race)
View(a)
View(a)
runApp()
runApp()
runApp()
amount <- dataTwo[,grepl(input$Race, names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense.charged)
amount <- dataTwo[,grepl("White", names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense.charged)
dataUsed$x <- runif(30, min=0, max=4)
dataUsed <- dataUsed %>% arrange(desc(amount))
View(dataUsed)
runApp()
runApp()
View(dataUsed)
runApp()
runApp()
dataUsed <- arrange(dataUsed, desc(amount))
View(dataUsed)
View(dataUsed)
dataUsed <- arrange(dataUsed, -desc(amount))
is.numeric(dataUsed$amount)
data <- read.csv("data/data.csv",stringsAsFactors=FALSE)
dataTwo <- read.csv("data/dataTwo.csv",stringsAsFactors=FALSE)
amount <-dataTwo[,grepl("White", names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense.charged)
is.numeric(dataUsed$amount)
a <- as.numeric(dataUsed$amount)
is.numeric(a)
runApp()
view(a)
help("read.csv")
View(dataTwo)
as.numeric(gsub("\\D", "", amount))
seq(4,1)
seq(4,1,2)
=======
>>>>>>> 9154fe4e2d0998e94774172f3b48b9830c968fe0
>>>>>>> fbfa3c3620d727d79dd3c30a0b63bf659a2a4fcb
