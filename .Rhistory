),
mainPanel(
tableOutput("table")
)
)
)
shinyUI(my.ui)
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
output&plot <- renderPlot({
barplot(filtered,
main=graph,
ylab="calories",
xlab="rating")
})
output&plot <- renderPlot({
barplot(filtered,
main=graph,
ylab="calories",
xlab="rating")
})
output&plot <- renderPlot({
barplot(filtered(),
main=graph,
ylab="calories",
xlab="rating")
})
output&plot <- renderPlot({
plot(filtered(),
col = filtered$rating,
pch = 20, cex = 3)
})
output&plot <- renderPlot({
plot(filtered(),
col = filtered()$rating,
pch = 20, cex = 3)
points(filtered()$calories, pch = 4, cex = 4, lwd = 4)
})
output&plot <- renderPlot({
plot(filtered()$rating,filtered()$calories)
})
output$plot <- renderPlot({
plot(filtered()$rating,filtered()$calories)
})
output$table <- renderTable({
filtered()
})
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
output$table <- renderTable({
filtered()
})
output$table <- renderTable({
filtered()
})
output$table <- renderTable({
filtered()
})
#install.packages("shiny")
library(shiny)
library(dplyr)
library(ggplot2)
the_data <- data.table::fread("/Users/a1111/desktop/info201HW/a8-shiny-SiwenW1998/data/cereal.tsv")
View(the_data)
my.server <- function(input, output) {
filtered <- reactive({
return(filter(the_data, rating > input$range[1], rating < input$range[2]) %>%
filter(calories < input$range2))
})
output$table <- renderTable({
filtered()
})
#output$plot <- renderPlot({
#plot(filtered()$rating,filtered()$calories)
#})
}
my.server <- function(input, output) {
filtered <- reactive({
return(filter(the_data, rating > input$range[1], rating < input$range[2]) %>%
filter(calories < input$range2))
})
output$table <- renderTable({
filtered()
})
output$plot <- renderPlot({
plot(filtered()$rating,filtered()$calories)
})
}
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
output$plot <- renderPlot({
plot(filtered()$rating,filtered()$calories,colors("blue"))
})
#install.packages("shiny")
library(shiny)
library(dplyr)
library(ggplot2)
the_data <- data.table::fread("/Users/a1111/desktop/info201HW/a8-shiny-SiwenW1998/data/cereal.tsv")
View(the_data)
my.server <- function(input, output) {
filtered <- reactive({
return(filter(the_data, rating > input$range[1], rating < input$range[2]) %>%
filter(calories < input$range2))
})
output$table <- renderTable({
filtered()
})
output$plot <- renderPlot({
plot(filtered()$rating,filtered()$calories,colors("blue"))
})
}
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
runApp('Desktop/info201HW/a8-shiny-SiwenW1998')
data <- read.csv("data/data.csv")
data <- read.csv("/Users/a1111/desktop/info201HW/Final-Project/data/data.csv")
View(dataUsed)
View(inputDataOne)
View(inputDataOne())
source('~/Desktop/info201HW/Final-Project/filter_data.R')
# Use a fluid Bootstrap layout
my.ui <- fluidPage(
# Give the page a title
titlePanel("Data you wanna know about CEREAL!"),
sidebarLayout(
# Define a sidebar
sidebarPanel(
# Define the slider with the range of rating
sliderInput(),
helpText("The range of the rating is from 0 to 100,
and you can choose the range of rating you want to view.
The table below the scatter plot will give you a detailed information
about the cereal you are interested in."),
# Define the slider with the one-end points of calories
sliderInput()
),
mainPanel(
# display a scattor plot with the interested information
plotOutput("plot"),
# display an information table present the interested information
tableOutput("table")
)
)
)
shiny::runApp('Desktop/info201HW/Final-Project')
install.packages("plotrix")
shiny::runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
runApp('Desktop/info201HW/Final-Project')
source('C:/Users/admin/Desktop/info201/Final-Project/filter_data.R')
shiny::runApp()
runApp()
runApp()
install.packages("plotrix")
runApp()
runApp()
runApp()
install.packages("plotly")
library("plotly", lib.loc="~/R/win-library/3.4")
runApp()
runApp('app')
install.packages("googleCharts")
runApp('app')
devtools::install_github("jcheng5/googleCharts")
install.packages("devtools")
devtools::install_github("jcheng5/googleCharts")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help(plot_ly)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("ggplot2", lib.loc="~/R/win-library/3.4")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help("geom_bar")
runApp()
help(hplot)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a = data.frame(o = c(1:4))
View(a)
View(a)
a$b <- c(2:5)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
c(1:0.1:4.1)
c(0:3.1,0.1)
c(0:3.1:0.1)
seq(1,3.1,0.1)
runApp()
runApp()
runApp()
runApp()
runApp()
rnorm(30)
help(rnorm)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dataTwo <- read.csv("data/dataTwo.csv")
View(dataTwo)
View(dataTwo)
dataUsed <- dataTwo[,grepl("White", names(dataTwo))]
dataUsed$Offense_charged <- dataTwo$Offense_charged
dataUsed$x <- runif(31, min=0, max=4)
dataUsed$y <-seq(0,3,0.1)
dataUsed$amount <- seq(0,30)
View(dataUsed)
View(dataUsed)
dataUsed <- dataTwo[,grepl("White", names(dataTwo))]
runApp()
runApp()
runApp()
dataUsed <- data.frame(a = dataTwo[,grepl("White", names(dataTwo))])
dataUsed$Offense_charged <- dataTwo$Offense_charged
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed$amount <- seq(0,29)
View(dataUsed)
View(dataUsed)
dataUsed$Offense_charged <- dataTwo$Offense_charged
View(dataUsed)
View(dataUsed)
dataUsed <- data.frame(a = dataTwo[,grepl("White"$"Total", names(dataTwo))])
dataUsed$Offense_charged <- dataTwo$Offense_charged
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed$amount <- seq(0,29)
dataUsed <- data.frame(a = dataTwo[,grepl("White","Total", names(dataTwo))])
dataUsed$Offense_charged <- dataTwo$Offense_charged
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed$amount <- seq(0,29)
tail(dataUsed,30)
amount <- dataTwo[,grepl("White", names(dataTwo))]
dataUsed$Offense_charged <- data.frame(amount = amount, Offense_charged = dataTwo$Offense_charged)
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed$amount <- seq(0,29)
amount <- dataTwo[,grepl("White", names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense_charged)
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed$amount <- seq(0,29)
dataTwo$Offense_charged
dataTwo$Offense.charged
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help(arange)
help(arrange)
runApp()
amount <- dataTwo[,grepl(input$Race, names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense.charged)
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed <- dataUsed %>% arrange(desc(amount))
dataUsed$size <- seq(0,87,3)
runApp()
amount <- dataTwo[,grepl("White", names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense.charged)
dataUsed$x <- runif(30, min=0, max=4)
dataUsed$y <-seq(0,2.9,0.1)
dataUsed <- dataUsed %>% arrange(desc(amount))
dataUsed$size <- seq(0,87,3)
View(dataUsed)
runApp()
runApp()
dataUsed <- data %>% filter(Offense_charged == input$Type)
dataUsed <- dataUsed[,grepl(input$Age, names(data))]
runApp()
dataUsed <- data %>% filter(Offense_charged == "Rape")
dataUsed <- dataUsed[,grepl("Total", names(data))]
data <- read.csv("data/data.csv")
View(data)
View(data)
dataUsed <- data %>% filter(Offense_charged == "Rape")
dataUsed <- dataUsed[,grepl("Total", names(data))]
View(dataUsed)
View(dataUsed)
View(data)
View(data)
runApp()
dataUsed <- data %>% filter(Offense_charged == "Rape")
dataUsed <- dataUsed[,grepl("total", names(data))]
View(dataUsed)
View(dataUsed)
runApp()
seq(1,1+3*5,3)
dataUsed <- dataUsed %>% arrange(desc(amount)
/
.
asdgfdhxnfhcm
dataUsed <- dataUsed %>% arrange(desc(amount)
vbnml;''
dataUsed <- dataUsed %>% arrange(desc(amount))
size(dataUsed)
length(dataUsed)
View(dataUsed)
View(dataUsed)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
help(xaxis)
runApp()
View(race)
View(race)
help("as.vector")
runApp()
runApp()
runApp()
View(race)
View(race)
a <- as.vector(race)
View(a)
View(a)
runApp()
runApp()
runApp()
amount <- dataTwo[,grepl(input$Race, names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense.charged)
amount <- dataTwo[,grepl("White", names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense.charged)
dataUsed$x <- runif(30, min=0, max=4)
dataUsed <- dataUsed %>% arrange(desc(amount))
View(dataUsed)
runApp()
runApp()
View(dataUsed)
runApp()
runApp()
dataUsed <- arrange(dataUsed, desc(amount))
View(dataUsed)
View(dataUsed)
dataUsed <- arrange(dataUsed, -desc(amount))
is.numeric(dataUsed$amount)
data <- read.csv("data/data.csv",stringsAsFactors=FALSE)
dataTwo <- read.csv("data/dataTwo.csv",stringsAsFactors=FALSE)
amount <-dataTwo[,grepl("White", names(dataTwo))]
dataUsed <- data.frame(amount = amount, Offense_charged = dataTwo$Offense.charged)
is.numeric(dataUsed$amount)
a <- as.numeric(dataUsed$amount)
is.numeric(a)
runApp()
view(a)
help("read.csv")
View(dataTwo)
as.numeric(gsub("\\D", "", amount))
seq(4,1)
seq(4,1,2)
